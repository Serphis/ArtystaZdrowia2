// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  // ratings   Rating[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  stock       Int       @default(0)
  image       String?
  price       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  // ratings     Rating[]

  sizes       Size[]    @relation("ProductSizes")  // Relacja z Size
}

model Size {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  productId String   @db.ObjectId
  product   Product @relation("ProductSizes", fields: [productId], references: [id]) // Relacja odwrotna
}

// model Rating {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   userId    String   @db.ObjectId
//   productId String   @db.ObjectId
//   rating    Int      @default(0) // Range: 1-5
//   comment   String?
//   createdAt DateTime @default(now())
  
//   user      User     @relation(fields: [userId], references: [id])
//   product   Product  @relation(fields: [productId], references: [id])
// }