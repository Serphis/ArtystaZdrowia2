// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  sizes       Size[]    @relation("ProductSizes")
  orderItems  OrderItem[]
}

model Size {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Float
  productId String   @db.ObjectId
  stock     Int     @default(0)
  product   Product @relation("ProductSizes", fields: [productId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  email           String
  receiverName    String
  receiverPhone   String
  deliveryMethod  String       @default("Paczkomat") // 'Paczkomat' lub 'Kurier'
  paymentMethod   String       @default("online")    // 'online' lub 'cod' (za pobraniem)
  shippingStatus  String       @default("Nie wysłano")
  trackingNumber  String?
  status          String       @default("Oczekujące")
  totalPrice      Float

  address         Json?
  
  parcelLocker    String?
  zipCode         String?

  products        OrderItem[]

  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @default(now()) @updatedAt
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])

  sizeId    String   @db.ObjectId
  size      Size     @relation(fields: [sizeId], references: [id])

  sizeName  String
  sizePrice Float
  quantity  Int      @default(1)
}